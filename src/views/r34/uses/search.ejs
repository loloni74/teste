<div class="autocomplete" id='autocomplete' autocomplete="off">
  <input  autofocus list="tags" id="domTagInput" type="text" name="tags" placeholder="digita alguma tag ai">
  <span id='addTag'>
    <span>+</span>
  </span>
  <input name='pid' value=0 style="display:none">
  <datalist id='tags'>
    <option value="sheive">
  <datalist>
</div>


<style>
  .autocomplete {
    display: flex;
  }
</style>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
const domTagInput = document.getElementById('domTagInput')
const domDivTagInput = document.getElementById('autocomplete')
let historicOfTags = ['sheive']

function autocomplete(div, tags) {
  tags.forEach(tag =>{
    let option = document.createElement('option')
    option.value = tag
    div.querySelector('datalist').appendChild(option)
  })
}

var debounce
domTagInput.addEventListener('keydown', (event) => {

  if (event.key != 'Enter' && event.key !== undefined ){
    var input = document.getElementById('domTagInput')
  var value = input.value
  clearTimeout(debounce)
  if (domTagInput.value.length > 1) {
    debounce = setTimeout(async () => {
      tag = domTagInput.value
      historicOfTags.push(tag)
      if (tag !== historicOfTags[historicOfTags.lastIndexOf(tag)-1]){
        console.log('Searching tag: '+tag)
        const rawTags = await axios.get(`/r34api/autocomplete?tag=${tag}`)
        console.log(rawTags)
        var filteredTags = []
        rawTags.data.forEach(element => {
          filteredTags.push(element.label)
        });
        autocomplete(domDivTagInput, filteredTags)
      }
    },400);
  }
  }
})
domTagInput.addEventListener('input', ()=>{
  var input = document.getElementById('domTagInput')
  var value = input.value
  if (value != ''){
    value = value.replace(' ', '_').split('_')
    let ver = value[value.length-1]
    ver = ver.slice(1,ver.length-1)
    try{
      ver = parseInt(ver)
    }catch{
    }
    if (Number.isInteger(ver)){
      value.pop();
    }
    input.value = value.join('_')
  }
})

</script>